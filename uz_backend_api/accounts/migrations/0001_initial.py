# Generated by Django 5.0.1 on 2024-01-11 22:13

import django.contrib.auth.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('institution', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('middle_names', models.CharField(blank=True, max_length=50, null=True)),
                ('username', models.CharField(blank=True, max_length=25, null=True, unique=True)),
                ('role', models.CharField(blank=True, choices=[('SUPERUSER', 'SUPERUSER'), ('ADMIN', 'ADMIN'), ('GENERAL EMPLOYEE', 'GENERAL EMPLOYEE'), ('APPLICANT', 'APPLICANT')], max_length=25, null=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], max_length=15, null=True)),
                ('institution_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('altEmail', models.EmailField(blank=True, help_text='personal Email apart from the company email ', max_length=254, null=True)),
                ('phone_number_1', models.CharField(blank=True, max_length=25, null=True)),
                ('phone_number_2', models.CharField(blank=True, max_length=25, null=True)),
                ('national_id', models.CharField(blank=True, max_length=100, null=True)),
                ('nationality', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.CharField(blank=True, max_length=255, null=True)),
                ('home_address', models.CharField(blank=True, max_length=255, null=True)),
                ('date_created', models.DateField(auto_now_add=True, help_text="The date the employee was enrolled on the organisation's system", null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='institution.institution')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'default_related_name': 'custom_%(class)s',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
